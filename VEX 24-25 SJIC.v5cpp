{"mode":"Text","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor LeftDriveSmart = motor(PORT1, ratio18_1, false);\nmotor RightDriveSmart = motor(PORT10, ratio18_1, true);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 319.19, 295, 40, mm, 1);\n\naccelerometer Accel2GAX = accelerometer(Brain.ThreeWirePort.A);\naccelerometer Accel2GBY = accelerometer(Brain.ThreeWirePort.B);\naccelerometer Accel2GCZ = accelerometer(Brain.ThreeWirePort.C);\n\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n#pragma endregion VEXcode Generated Robot Configuration\n\n// ----------------------------------------------------------------------------\n//                                                                            \n//    Project:        3-Wire Accelerometer Sensing                                         \n//    Description:    This example will show all of the available commands\n//                    for using the 3-Wire Accelerometer Sensor\n//    Configuration:  V5 Speedbot (Drivetrain 2-motor, No Gyro)\n//                    Accelerometer X in 3-Wire Port A\n//                    Accelerometer Y in 3-Wire Port B\n//                    Accelerometer Z in 3-Wire Port C\n//                                                                            \n// ----------------------------------------------------------------------------\n\n// Include the V5 Library\n#include \"vex.h\"\n\n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint main() {\n  // Begin project code.\n  \n  // Print all Accelerometer sensing values to the screen in an infinite loop\n  while(true) {\n    // Clear the screen and set the cursor to top left corner on each loop\n    Brain.Screen.clearScreen();\n    Brain.Screen.setCursor(1, 1);\n\n    Brain.Screen.print(\"Acceleration - X: %.2f\", Accel2GAX.acceleration());\n    Brain.Screen.newLine();\n\n    Brain.Screen.print(\"Acceleration - Y: %.2f\", Accel2GBY.acceleration());\n    Brain.Screen.newLine();\n\n    Brain.Screen.print(\"Acceleration - Z: %.2f\", Accel2GCZ.acceleration());\n    Brain.Screen.newLine();\n\n    // A brief delay to allow text to be printed without distortion or tearing\n    wait(50, msec);\n  }\n\n  return 0;\n}\n\n\n\n\n","textLanguage":"cpp","rconfig":[{"port":[1,10,null],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm"},"triportSourcePort":null},{"port":[1],"name":"Accel2GAX","customName":true,"deviceType":"Accel2G","deviceClass":"accelerometer","setting":{},"triportSourcePort":22},{"port":[2],"name":"Accel2GBY","customName":true,"deviceType":"Accel2G","deviceClass":"accelerometer","setting":{},"triportSourcePort":22},{"port":[3],"name":"Accel2GCZ","customName":true,"deviceType":"Accel2G","deviceClass":"accelerometer","setting":{},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20240219.10.00.00","appVersion":"3.1.1","minVersion":"3.1.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}